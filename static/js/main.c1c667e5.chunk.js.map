{"version":3,"sources":["components/Form/form.module.css","components/Filter/filter.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactList/contactList.module.css","components/app.module.css"],"names":["module","exports","Form","state","name","number","handleNameChange","target","value","setState","props","getName","hanndleSubmit","e","preventDefault","getContact","id","uuidv4","this","className","styles","form","onSubmit","label","input","type","onChange","button","Component","ContactList","contactList","deleteContact","list","map","contact","item","key","onClick","Filter","filter","getFilterName","App","contacts","data","flag","el","prev","alert","event","filteredItems","toLowerCase","includes","contactId","localStorage","getItem","contactsParsed","JSON","parse","prevProps","prevState","setItem","stringify","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1c667e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1Y7Vu\",\"label\":\"form_label__3l7Yc\",\"input\":\"form_input__2ZBKb\",\"button\":\"form_button__1Y6C6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"filter_title__s1RBC\",\"input\":\"filter_input__1jK6j\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './form.module.css';\n\nexport class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleNameChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n    this.props.getName(this.state.name);\n  };\n\n  hanndleSubmit = e => {\n    e.preventDefault();\n    this.props.getContact({ ...this.state, id: uuidv4() });\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.hanndleSubmit}>\n        <label className={styles.label}>\n          Name:\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleNameChange}\n          ></input>\n        </label>\n        <label className={styles.label}>\n          Phone:\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleNameChange}\n          ></input>\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  getContact: PropTypes.func,\n  getName: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './contactList.module.css';\n\nexport function ContactList({ contactList, deleteContact }) {\n  return (\n    <ul className={styles.list}>\n      {contactList.map(contact => {\n        return (\n          <li className={styles.item} key={contact.id}>\n            <span>{contact.name}</span>\n            <span>: {contact.number}</span>\n            <button\n              className={styles.button}\n              onClick={() => deleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contactList: PropTypes.arrayOf(PropTypes.object),\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './filter.module.css';\n\nexport function Filter({ filter, getFilterName }) {\n  return (\n    <>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getFilterName}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  getFilterName: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { Form } from './Form/Form';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\n\nimport styles from './app.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const contactsParsed = JSON.parse(contacts);\n    if (contactsParsed) {\n      this.setState({ contacts: contactsParsed });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  getName = data => {\n    this.setState({ name: data });\n  };\n\n  getContact = contact => {\n    let flag = true;\n\n    this.state.contacts.map(el =>\n      el.name === contact.name ? (flag = false) : '',\n    );\n\n    flag\n      ? this.setState(prev => {\n          return { ...prev, contacts: [...prev.contacts, contact] };\n        })\n      : alert(`${contact.name} is already in contacts`);\n  };\n\n  getFilterName = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  filteredItems = () => {\n    return this.state.filter\n      ? this.state.contacts.filter(el =>\n          el.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n        )\n      : this.state.contacts;\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className={styles.title}>Phonebook</h2>\n        <Form getContact={this.getContact} getName={this.getName} />\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter filter={this.state.filter} getFilterName={this.getFilterName} />\n        <ContactList\n          contactList={this.filteredItems()}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactList_item__2rgil\",\"button\":\"contactList_button__3u4lS\",\"list\":\"contactList_list__2rdDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__3HGLj\"};"],"sourceRoot":""}